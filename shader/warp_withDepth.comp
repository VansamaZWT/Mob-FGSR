# version 450

layout(local_size_x = 8, local_size_y = 8) in;

layout(binding = 0) uniform sampler2D fill_mv_1;
layout(binding = 1) uniform sampler2D fill_mv_2;
layout(binding = 2) uniform sampler2D color_1;
layout(binding = 3) uniform sampler2D color_0;
layout(binding = 4) uniform sampler2D depth_1;
layout(binding = 5) uniform sampler2D depth_0;

layout(rgba32f, binding = 0) writeonly uniform image2D warp_color1;
layout(rgba32f, binding = 1) writeonly uniform image2D warp_depth1;
layout(rgba32f, binding = 2) writeonly uniform image2D warp_color2;
layout(rgba32f, binding = 3) writeonly uniform image2D warp_depth2;

void main(){
    ivec2 pixCoord = ivec2(gl_GlobalInvocationID.xy);
	ivec2 frameSize = textureSize(color_1, 0);
	if (pixCoord.x >= frameSize.x || pixCoord.y >= frameSize.y) {
		return;
	}
	vec2 size = vec2(frameSize);

    vec2 pix_mv_1 = texelFetch(fill_mv_1, pixCoord, 0).xy;
    ivec2 flow_1 = ivec2(round(pix_mv_1));

	ivec2 back_pos_1 = ivec2(pixCoord.x - flow_1.x, pixCoord.y + flow_1.y);
    vec4 pix_color_1 = texelFetch(color_1,back_pos_1,0);
    imageStore(warp_color1, pixCoord, pix_color_1);
    vec4 pix_depth_1 = texelFetch(depth_1,back_pos_1,0);
    imageStore(warp_depth1, pixCoord, pix_depth_1);

    vec2 pix_mv_2 = texelFetch(fill_mv_2, pixCoord, 0).xy;
    ivec2 flow_2 = ivec2(round(pix_mv_2));

	ivec2 back_pos_2 = ivec2(pixCoord.x - flow_2.x, pixCoord.y + flow_2.y);
    vec4 pix_color_2 = texelFetch(color_0,back_pos_2,0);
    imageStore(warp_color2, pixCoord, pix_color_2);
    vec4 pix_depth_2 = texelFetch(depth_0,back_pos_2,0);
    imageStore(warp_depth2, pixCoord, pix_depth_2);
}